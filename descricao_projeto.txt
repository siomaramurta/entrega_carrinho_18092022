Projeto carrinho de compras

Módulo framework
O script Projeto1.py, que acompanha este documento, é um protótipo da API
Rest do projeto final do “carrinho de compras”.

Contexto

Nesta etapa, nossa API para o carrinho de compras irá:
● Cadastrar um usuário com um nome e um e-mail. Um usuário irá ter um
código identificador único no sistema.
● Consultar um usuário pelo seu código identificador.
● Consultar um usuário pelo primeiro nome dele.
● Remover um usuário pelo código dele.
● Cadastrar o(s) endereço(s) do usuário.
● Pesquisar pelos endereços de um usuário.
● Remover um endereço do usuário pelo seu código identificador.
● Cadastrar um produto, que possua nome, descrição, preço, e código
identificador.
● Remover um produto pelo código.
● Criar um carrinho de compras associado a um usuário.
● Adicionar produtos ao carrinho de compras.
● Remover produtos ao carrinho de compras.
● Calcular o valor total do carrinho.
● Remover o carrinho de compras.
● Ter na página raiz uma saudação de boas vindas.




Atividade

A partir do script Projeto1.py, seguem suas atividades:

● Revisar o código e fazer os ajustes que você considerar necessário para que
o script atenda ao contexto apresentado.
● Deixar o script Projeto1.py funcionando, ou seja, as APIs de sua aplicação
Web deverão executar cada um dos itens do apresentados no contexto.
● Não é necessário salvar os seus registros e informações em um banco de
dados ou em um arquivo, eles podem ser salvos na memória, tal como visto
na aula de Sábado (10/09/2022).
● Não é necessário criar regras para esta etapa.
○ Por exemplo, se sua API salvar o usuário com código, e eu informar o
mesmo código, não é necessário que a aplicação barre o processo.
○ Deixe a aplicação mais simples o possível.
● O arquivo “casos_de_testes.http” é uma base dos testes que
esperamos fazer para validar a sua aplicação servidora do carrinho de
compras.

Sobre o trabalho
● O trabalho deverá ser entregue até o dia 18/09/2022 às 23:59:59, horário de
Brasília.
● O trabalho é individual.
● Você deverá postá-lo no seu GitHub pessoal, e compartilhá-lo com os
professores e os parças que irão corrigi-lo.
○ Mais detalhes sobre isto, serão repassados posteriormente.

Serão avaliados:

○ Legibilidade do código fonte. O quanto o seu código fonte é claro e
fácil de entender? Isto envolve variáveis, funções e classes que você
adicionar ou modificar. O seu código segue uma lógica ou linha de
raciocínio (quando aplicado)?
○ Organização do código. Foram definidas funções ou classes
específicas para cada caso? Há muitas condições aninhadas?
○ Todos os requisitos do contexto foram atendidos?
○ E outros diferenciais…